<Window x:Class="Animator.UI.MainWindow"
		xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
		xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
		Title="Animator" Height="600" Width="1000" x:Name="mainWindow" Style="{StaticResource MainWindowStyle}"
		xmlns:panes="clr-namespace:Animator.UI.Panes" xmlns:appCore="clr-namespace:Animator.AppCore" xmlns:test="clr-namespace:Animator.Test"
		xmlns:ui="clr-namespace:Animator.UI" xmlns:cmn="clr-namespace:Animator.UI.Common"
		xmlns:seq="clr-namespace:Animator.UI.Sequencing" xmlns:ctl="clr-namespace:Animator.UI.Controls" MinWidth="500" MinHeight="400">
	<Window.Resources>
		<Style TargetType="{x:Type GridSplitter}">
			<Setter Property="DragIncrement" Value="20"/>
			<Setter Property="BorderBrush">
				<Setter.Value>
					<SolidColorBrush Color="Transparent"/>
				</Setter.Value>
			</Setter>
			<Setter Property="Background">
				<Setter.Value>
					<SolidColorBrush Color="Transparent"/>
				</Setter.Value>
			</Setter>
			<Setter Property="HorizontalAlignment" Value="Stretch"/>
			<Setter Property="VerticalAlignment" Value="Stretch"/>
			<Style.Triggers>
				<Trigger Property="ResizeDirection" Value="Columns">
					<Trigger.Setters>
						<Setter Property="Width" Value="4"/>
					</Trigger.Setters>
				</Trigger>
				<Trigger Property="ResizeDirection" Value="Rows">
					<Trigger.Setters>
						<Setter Property="Height" Value="4"/>
					</Trigger.Setters>
				</Trigger>
			</Style.Triggers>
		</Style>
	</Window.Resources>
	<Window.CommandBindings>
		<CommandBinding Command="appCore:AniAppCommands.Exit" Executed="ExitCommand_Executed" />
		<CommandBinding Command="test:TestCommands.ShowTestWindow" Executed="ShowTestWindowCommand_Executed" />
		<CommandBinding Command="ApplicationCommands.New" Executed="NewCommand_Executed" />
		<CommandBinding Command="ApplicationCommands.Open" Executed="OpenCommand_Executed" />
		<CommandBinding Command="ApplicationCommands.Save" Executed="SaveCommand_Executed" CanExecute="Command_CanExecuteWhenActiveDocumentDirty" />
		<CommandBinding Command="ApplicationCommands.SaveAs" Executed="SaveAsCommand_Executed" CanExecute="Command_CanExecuteWhenHasActiveDocument" />
		<CommandBinding Command="ApplicationCommands.Close" Executed="CloseCommand_Executed" CanExecute="Command_CanExecuteWhenHasActiveDocument" />
		<CommandBinding Command="appCore:AniAppCommands.AddOutput" Executed="AddOutputCommand_Executed" CanExecute="Command_CanExecuteWhenHasActiveDocument" />
		<CommandBinding Command="appCore:AniAppCommands.AboutApplication" Executed="AboutApplicationCommand_Executed"/>
		<CommandBinding Command="appCore:AniAppCommands.EditDetail" Executed="EditDetailCommand_Executed" CanExecute="EditDetailCommand_CanExecute"/>
		<CommandBinding Command="ApplicationCommands.Delete" Executed="DeleteCommand_Executed" CanExecute="DeleteCommand_CanExecute"/>
	</Window.CommandBindings>
	<Grid>
		<Grid.ColumnDefinitions>
			<ColumnDefinition Width="Auto"/>
			<ColumnDefinition Width="Auto"/>
			<ColumnDefinition />
			<ColumnDefinition Width="Auto"/>
			<ColumnDefinition Width="Auto"/>
		</Grid.ColumnDefinitions>
		<Grid.RowDefinitions>
			<RowDefinition Height="Auto" />
			<RowDefinition/>
			<RowDefinition Height="Auto" />
		</Grid.RowDefinitions>
		<Menu Grid.ColumnSpan="5">
			<Menu.Style>
				<Style TargetType="{x:Type Menu}">
					<Setter Property="FontFamily" Value="{DynamicResource {x:Static SystemFonts.MenuFontFamilyKey}}"/>
					<Setter Property="FontSize" Value="{DynamicResource {x:Static SystemFonts.MenuFontSizeKey}}"/>
					<Setter Property="FontStyle" Value="{DynamicResource {x:Static SystemFonts.MenuFontStyleKey}}"/>
					<Setter Property="FontWeight" Value="{DynamicResource {x:Static SystemFonts.MenuFontWeightKey}}"/>
					<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}"/>
					<Setter Property="Template">
						<Setter.Value>
							<ControlTemplate TargetType="{x:Type Menu}">
								<Border Background="{StaticResource PaneBackgroundBrush}" BorderBrush="{StaticResource PaneBorderBrush}" BorderThickness="2" CornerRadius="4" Padding="4">
									<DockPanel IsItemsHost="True" LastChildFill="False" />
								</Border>
							</ControlTemplate>
						</Setter.Value>
					</Setter>
				</Style>
			</Menu.Style>
			<Menu.Resources>
				<Style TargetType="{x:Type MenuItem}">
					<Setter Property="Background" Value="{StaticResource PaneBackgroundBrush}" />
				</Style>
				<Style x:Key="SeparatorStyle" TargetType="{x:Type Separator}">
					<Setter Property="Template">
						<Setter.Value>
							<ControlTemplate TargetType="{x:Type Separator}">
								<Grid SnapsToDevicePixels="true" Background="{StaticResource PaneBackgroundBrush}">
									<Rectangle Fill="{StaticResource MainMenuSeparatorBrush}" Height="2" Margin="10,2,10,2"/>
								</Grid>
							</ControlTemplate>
						</Setter.Value>
					</Setter>
					<Setter Property="Background" Value="{StaticResource PaneBackgroundBrush}"/>
				</Style>
			</Menu.Resources>
			<MenuItem Header="_File">
				<MenuItem Command="ApplicationCommands.New" />
				<MenuItem Command="ApplicationCommands.Open" />
				<MenuItem Command="ApplicationCommands.Save" />
				<MenuItem Command="ApplicationCommands.SaveAs" />
				<MenuItem Command="ApplicationCommands.Close" />
				<Separator Style="{StaticResource SeparatorStyle}" />
				<ctl:RecentFilesMenuItem Header="_Recent Files" Background="{StaticResource PaneBackgroundBrush}"/>
				<Separator Style="{StaticResource SeparatorStyle}" />
				<MenuItem Command="appCore:AniAppCommands.Exit" />
			</MenuItem>
			<MenuItem Header="_Edit">
				<MenuItem Command="ApplicationCommands.Undo"/>
				<MenuItem Command="ApplicationCommands.Redo"/>
				<Separator Style="{StaticResource SeparatorStyle}" />
				<MenuItem Command="ApplicationCommands.Cut"/>
				<MenuItem Command="ApplicationCommands.Copy"/>
				<MenuItem Command="ApplicationCommands.Paste"/>
				<MenuItem Command="ApplicationCommands.Delete"/>
				<Separator Style="{StaticResource SeparatorStyle}" />
				<MenuItem Command="appCore:AniAppCommands.EditTransport" Header="Document _Transport" />
			</MenuItem>
			<MenuItem Header="_Add">
				<MenuItem Command="appCore:AniAppCommands.AddOutput" Header="_Output" />
				<MenuItem Command="appCore:AniAppCommands.AddTrack" Header="_Track" />
			</MenuItem>
			<MenuItem Header="_View">
				<MenuItem x:Name="sectionsVisibleMenuItem" Header="_Sections" IsCheckable="True" IsChecked="True"/>
				<MenuItem x:Name="outputsVisibleMenuItem" Header="_Outputs" IsCheckable="True" IsChecked="True"/>
				<Separator Style="{StaticResource SeparatorStyle}" />
				<MenuItem x:Name="statusBarVisibleMenuItem" Header="Status _Bar" IsCheckable="True" IsChecked="True" />
			</MenuItem>
			<MenuItem Header="_Debug">
				<MenuItem Command="test:TestCommands.ShowTestWindow" />
			</MenuItem>
			<MenuItem Header="_Help">
				<MenuItem Command="appCore:AniAppCommands.AboutApplication" Header="_About Animator" />
			</MenuItem>
		</Menu>
		<panes:SectionsPane x:Name="sectionsPane" Grid.Row="1" MinWidth="150" Visibility="{Binding ElementName=sectionsVisibleMenuItem, Path=IsChecked, Converter={StaticResource BooleanToVisibilityConverter}}" />
		<GridSplitter Grid.Row="1" Grid.Column="1" ResizeDirection="Columns" HorizontalAlignment="Stretch"
					  Visibility="{Binding ElementName=sectionsVisibleMenuItem, Path=IsChecked, Converter={StaticResource BooleanToVisibilityConverter}}" />

		<panes:SectionEditorPane Grid.Row="1" Grid.Column="2" DataContext="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ui:MainWindow,AncestorLevel=1}, Path=SelectedSection}">
			<panes:SectionEditorPane.SequenceEditor>
				<seq:SequencePanel />
			</panes:SectionEditorPane.SequenceEditor>
			<panes:SectionEditorPane.SessionEditor>
				<UserControl Style="{StaticResource HeaderedPaneStyle}" appCore:AniUI.PaneHeader="Session" IsEnabled="False" />
			</panes:SectionEditorPane.SessionEditor>
			<panes:SectionEditorPane.NoEditor>
				<UserControl Style="{StaticResource PaneUserControlStyle}"/>
			</panes:SectionEditorPane.NoEditor>
		</panes:SectionEditorPane>
		
		<GridSplitter Grid.Row="1" Grid.Column="3" ResizeDirection="Columns" HorizontalAlignment="Stretch"
						   Visibility="{Binding ElementName=outputsVisibleMenuItem, Path=IsChecked, Converter={StaticResource BooleanToVisibilityConverter}}" />
		<panes:OutputsPane Grid.Row="1" Grid.Column="4" MinWidth="130"
						   Visibility="{Binding ElementName=outputsVisibleMenuItem, Path=IsChecked, Converter={StaticResource BooleanToVisibilityConverter}}" />
		<StatusBar Grid.ColumnSpan="5" Grid.Row="2" Visibility="{Binding ElementName=statusBarVisibleMenuItem, Path=IsChecked, Converter={StaticResource BooleanToVisibilityConverter}}">
			<StatusBar.Style>
				<Style TargetType="{x:Type StatusBar}">
					<Setter Property="Background" Value="#FFF1EDED"/>
					<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
					<Setter Property="FontFamily" Value="{DynamicResource {x:Static SystemFonts.StatusFontFamilyKey}}"/>
					<Setter Property="FontSize" Value="{DynamicResource {x:Static SystemFonts.StatusFontSizeKey}}"/>
					<Setter Property="FontStyle" Value="{DynamicResource {x:Static SystemFonts.StatusFontStyleKey}}"/>
					<Setter Property="FontWeight" Value="{DynamicResource {x:Static SystemFonts.StatusFontWeightKey}}"/>
					<Setter Property="Template">
						<Setter.Value>
							<ControlTemplate TargetType="{x:Type StatusBar}">
								<Border Background="{StaticResource PaneBackgroundBrush}" BorderBrush="{StaticResource PaneBorderBrush}" BorderThickness="2" CornerRadius="4" Padding="4" SnapsToDevicePixels="True">
									<ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
								</Border>
							</ControlTemplate>
						</Setter.Value>
					</Setter>
				</Style>
			</StatusBar.Style>
			<CheckBox IsEnabled="False" IsChecked="{Binding Path=ActiveDocumentDirty, RelativeSource={RelativeSource FindAncestor, AncestorType=ui:MainWindow}}" />
		</StatusBar>
	</Grid>
</Window>
