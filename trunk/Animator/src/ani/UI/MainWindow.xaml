<Window x:Class="Animator.UI.MainWindow"
		xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
		xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
		Title="Animator" Height="600" Width="1000" x:Name="mainWindow" Style="{StaticResource MainWindowStyle}"
		xmlns:panes="clr-namespace:Animator.UI.Panes" xmlns:AppCore="clr-namespace:Animator.AppCore" xmlns:Test="clr-namespace:Animator.Test" xmlns:Model="clr-namespace:Animator.Core.Model;assembly=anicore" xmlns:my="clr-namespace:Animator.UI" xmlns:Session="clr-namespace:Animator.UI.Session">
	<Window.Resources>
		<Style TargetType="{x:Type GridSplitter}">
			<Setter Property="DragIncrement" Value="20"/>
		</Style>
	</Window.Resources>
	<Window.CommandBindings>
		<CommandBinding Command="AppCore:AniAppCommands.Exit" Executed="ExitCommand_Executed" />
		<CommandBinding Command="Test:TestCommands.ShowTestWindow" Executed="ShowTestWindowCommand_Executed" />
		<CommandBinding Command="Test:TestCommands.DebuggerBreak" Executed="DebuggerBreakCommand_Executed"/>
		<CommandBinding Command="Test:TestCommands.ShowRecentFilesInfo" Executed="ShowRecentFilesInfoCommand_Executed"/>
		<CommandBinding Command="ApplicationCommands.New" Executed="NewCommand_Executed" />
		<CommandBinding Command="ApplicationCommands.Open" Executed="OpenCommand_Executed" />
		<CommandBinding Command="ApplicationCommands.Save" Executed="SaveCommand_Executed" CanExecute="Command_CanExecuteWhenActiveDocumentDirty" />
		<CommandBinding Command="ApplicationCommands.SaveAs" Executed="SaveAsCommand_Executed" CanExecute="Command_CanExecuteWhenActiveDocumentDirty" />
		<CommandBinding Command="ApplicationCommands.Close" Executed="CloseCommand_Executed" CanExecute="Command_CanExecuteWhenHasActiveDocument" />
		<CommandBinding Command="AppCore:AniAppCommands.AddClip" Executed="AddClipCommand_Executed" CanExecute="Command_CanExecuteWhenHasActiveDocument" />
		<CommandBinding Command="AppCore:AniAppCommands.AddOutput" Executed="AddOutputCommand_Executed" CanExecute="Command_CanExecuteWhenHasActiveDocument" />
	</Window.CommandBindings>
	<Grid>
		<Grid.ColumnDefinitions>
			<ColumnDefinition Width="Auto" MinWidth="200" />
			<ColumnDefinition Width="Auto"/>
			<ColumnDefinition />
		</Grid.ColumnDefinitions>
		<Grid.RowDefinitions>
			<RowDefinition Height="Auto" />
			<RowDefinition/>
			<RowDefinition Height="Auto" />
		</Grid.RowDefinitions>
		<Menu Style="{DynamicResource MainMenuStyle}" Grid.ColumnSpan="3">
			<Menu.Resources>
				<Style TargetType="{x:Type MenuItem}" BasedOn="{StaticResource MainMenuItemStyle}" />
			</Menu.Resources>
			<!--<MenuItem Padding="2,2,2,3" IsEnabled="False">
				<MenuItem.Header>
					<Image Source="/ani;component/Resources/ani_icon_main.ico" Stretch="Fill" Width="16" Height="16" />
				</MenuItem.Header>
			</MenuItem>-->
			<MenuItem Header="_File">
				<MenuItem Command="ApplicationCommands.New" />
				<MenuItem Command="ApplicationCommands.Open" />
				<MenuItem Command="ApplicationCommands.Save" />
				<MenuItem Command="ApplicationCommands.SaveAs" />
				<MenuItem Command="ApplicationCommands.Close" />
				<Separator Style="{StaticResource MainMenuSeparatorStyle}" />
				<MenuItem x:Name="RecentFilesMenu" Header="_Recent Files" ItemsSource="{Binding ElementName=mainWindow, Path=RecentFiles}">
					<MenuItem.ItemContainerStyle>
						<Style TargetType="{x:Type MenuItem}">
							<Setter Property="Command" Value="ApplicationCommands.Open" />
							<Setter Property="CommandParameter" Value="{Binding}"/>
						</Style>
					</MenuItem.ItemContainerStyle>
				</MenuItem>
				<Separator Style="{StaticResource MainMenuSeparatorStyle}" />
				<MenuItem Command="AppCore:AniAppCommands.Exit" />
			</MenuItem>
			<MenuItem Header="_Edit">
				<MenuItem Command="ApplicationCommands.Undo"/>
				<MenuItem Command="ApplicationCommands.Redo"/>
				<Separator Style="{StaticResource MainMenuSeparatorStyle}" />
				<MenuItem Command="ApplicationCommands.Cut"/>
				<MenuItem Command="ApplicationCommands.Copy"/>
				<MenuItem Command="ApplicationCommands.Paste"/>
				<MenuItem Command="ApplicationCommands.Delete"/>
			</MenuItem>
			<MenuItem Header="_Add" IsEnabled="{Binding ElementName=mainWindow, Path=HasActiveDocument}">
				<MenuItem Command="AppCore:AniAppCommands.AddClip" Header="_Clip" />
				<MenuItem Command="AppCore:AniAppCommands.AddOutput" Header="_Output" />
			</MenuItem>
			<MenuItem Header="_View">
				<MenuItem x:Name="docPropsVisibleMenuItem" Header="_Document Properties" IsCheckable="True" IsChecked="True"/>
				<MenuItem x:Name="outputsVisibleMenuItem" Header="_Outputs" IsCheckable="True" IsChecked="True"/>
				<MenuItem x:Name="statusBarVisibleMenuItem" Header="Status _Bar" IsCheckable="True" IsChecked="True" />
				<MenuItem x:Name="clipEditMenuItem" Header="_Clip Editor" IsCheckable="True" IsChecked="True"/>
			</MenuItem>
			<MenuItem Header="_Debug">
				<MenuItem Command="Test:TestCommands.ShowTestWindow" />
				<MenuItem Command="Test:TestCommands.DebuggerBreak" />
				<MenuItem Command="Test:TestCommands.ShowRecentFilesInfo" />
			</MenuItem>
			<!--<StackPanel Orientation="Horizontal" FlowDirection="RightToLeft">
				<Button Width="16" Background="{StaticResource CloseButtonImage}">
				</Button>
			</StackPanel>-->
		</Menu>
		<Grid Grid.Row="1">
			<Grid.RowDefinitions>
				<RowDefinition Height="Auto"/>
				<RowDefinition />
			</Grid.RowDefinitions>
			<panes:DocumentPropertiesPane x:Name="documentPropertiesPane" Margin="1" IsEnabled="{Binding ElementName=mainWindow, Path=HasActiveDocument}" Visibility="{Binding ElementName=docPropsVisibleMenuItem, Path=IsChecked, Converter={StaticResource BooleanToVisibilityConverter}}" />
			<panes:AniPane Grid.Row="1" Style="{StaticResource HeaderedPaneUserControlStyle}" PaneHeader="Outputs" Visibility="{Binding ElementName=outputsVisibleMenuItem, Path=IsChecked, Converter={StaticResource BooleanToVisibilityConverter}}">
				<ListBox x:Name="outputsListBox" Background="{x:Null}" ItemsSource="{Binding Path=Outputs}" HorizontalContentAlignment="Stretch">
					<ListBox.CommandBindings>
						<CommandBinding Command="ApplicationCommands.Delete" Executed="OutputList_DeleteCommand_Executed" />
					</ListBox.CommandBindings>
					<ListBox.ItemTemplate>
						<DataTemplate DataType="{x:Type Model:Output}">
							<panes:OutputPropertiesPane Grid.Row="1" PaneHeader="{Binding Path=Name}">
								<panes:OutputPropertiesPane.ContextMenu>
									<ContextMenu>
										<MenuItem Header="_Delete" Command="ApplicationCommands.Delete" CommandParameter="{Binding}" />
									</ContextMenu>
								</panes:OutputPropertiesPane.ContextMenu>
							</panes:OutputPropertiesPane>
						</DataTemplate>
					</ListBox.ItemTemplate>
				</ListBox>
			</panes:AniPane>
		</Grid>
		<GridSplitter Grid.Row="1" Grid.Column="1" Width="2" ResizeDirection="Columns" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" />
		<Grid Grid.Row="1" Grid.Column="2">
			<Grid.RowDefinitions>
				<RowDefinition />
				<RowDefinition Height="Auto"/>
				<RowDefinition Height="200"/>
			</Grid.RowDefinitions>
			<Session:DocumentClipGridPane x:Name="documentClipGrid" Document="{Binding ElementName=mainWindow, Path=ActiveDocument}" />
			<GridSplitter Grid.Row="1" Height="2" ResizeDirection="Rows" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" />
			<panes:ClipEditorPane Grid.Row="2" x:Name="activeClipEditorPane" Visibility="{Binding ElementName=clipEditMenuItem, Path=IsChecked, Converter={StaticResource BooleanToVisibilityConverter}}" DataContext="{Binding ElementName=documentClipGrid, Path=SelectedClip}" />
		</Grid>
		<StatusBar DockPanel.Dock="Bottom" Style="{DynamicResource MainStatusBarStyle}" Grid.ColumnSpan="3" Grid.Row="2" Visibility="{Binding ElementName=statusBarVisibleMenuItem, Path=IsChecked, Converter={StaticResource BooleanToVisibilityConverter}}">
			<CheckBox IsEnabled="False" IsChecked="{Binding Path=ActiveDocumentDirty, RelativeSource={RelativeSource FindAncestor, AncestorType=my:MainWindow}}" />
		</StatusBar>
	</Grid>
</Window>
